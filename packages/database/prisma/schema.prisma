datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String?
  password        String
  role            UserRole  @default(USER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Site {
  id              String    @id @default(cuid())
  name            String
  domain          String?   @unique
  subdomain       String    @unique
  type            SiteType
  status          Status    @default(DRAFT)
  languages       String[]  @default(["en"])
  defaultLanguage String    @default("en")
  theme           Json      @default("{}")
  features        Json      @default("{}")
  seoSettings     Json      @default("{}")
  metadata        Json      @default("{}")
  pages           Page[]
  deployments     Deployment[]
  analytics       Analytics[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([status])
  @@index([subdomain])
}

model Page {
  id              String    @id @default(cuid())
  siteId          String
  site            Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)
  type            PageType
  slug            String
  status          Status    @default(DRAFT)
  metadata        Json      @default("{}")
  seoSettings     Json      @default("{}")
  sections        Section[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@unique([siteId, slug])
  @@index([siteId, status])
}

model Section {
  id              String    @id @default(cuid())
  pageId          String
  page            Page      @relation(fields: [pageId], references: [id], onDelete: Cascade)
  templateId      String
  template        Template  @relation(fields: [templateId], references: [id])
  order           Int
  visibility      Json      @default("{}")
  customStyles    Json      @default("{}")
  content         SectionContent[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([pageId, order])
}

model SectionContent {
  id              String    @id @default(cuid())
  sectionId       String
  section         Section   @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  language        String
  data            Json
  imageUrls       String[]
  generatedBy     String    @default("gemini-2.5-pro")
  generatedAt     DateTime  @default(now())
  version         Int       @default(1)
  
  @@unique([sectionId, language])
  @@index([sectionId])
}

model Template {
  id              String    @id @default(cuid())
  name            String    @unique
  displayName     String
  category        String
  description     String?
  schema          Json
  defaultData     Json      @default("{}")
  systemPrompt    String    @db.Text
  userPromptTemplate String @db.Text
  componentName   String
  previewImage    String?
  isActive        Boolean   @default(true)
  sections        Section[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([category])
  @@index([isActive])
}

model Deployment {
  id              String    @id @default(cuid())
  siteId          String
  site            Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)
  environment     Environment @default(PRODUCTION)
  status          DeploymentStatus @default(PENDING)
  deploymentId    String?   // Vercel deployment ID
  url             String?
  error           String?
  metadata        Json      @default("{}")
  startedAt       DateTime  @default(now())
  completedAt     DateTime?
  
  @@index([siteId, status])
  @@index([startedAt])
}

model Analytics {
  id              String    @id @default(cuid())
  siteId          String
  site            Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)
  date            DateTime  @db.Date
  pageViews       Int       @default(0)
  uniqueVisitors  Int       @default(0)
  avgSessionTime  Float     @default(0)
  bounceRate      Float     @default(0)
  topPages        Json      @default("[]")
  topReferrers    Json      @default("[]")
  deviceTypes     Json      @default("{}")
  countries       Json      @default("{}")
  
  @@unique([siteId, date])
  @@index([siteId])
  @@index([date])
}

model GeneratedImage {
  id              String    @id @default(cuid())
  prompt          String    @db.Text
  negativePrompt  String?   @db.Text
  model           String    @default("flux-pro")
  url             String
  thumbnailUrl    String?
  width           Int
  height          Int
  metadata        Json      @default("{}")
  usedIn          Json      @default("[]") // Array of {siteId, pageId, sectionId}
  createdAt       DateTime  @default(now())
  
  @@index([createdAt])
}

enum UserRole {
  ADMIN
  USER
}

enum SiteType {
  CITY
  ATTRACTION
  REGION
  CUSTOM
}

enum PageType {
  HOME
  CATEGORY
  ATTRACTION
  GUIDE
  ABOUT
  CONTACT
  CUSTOM
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum Environment {
  DEVELOPMENT
  STAGING
  PRODUCTION
}

enum DeploymentStatus {
  PENDING
  BUILDING
  DEPLOYING
  SUCCESS
  FAILED
  CANCELLED
}